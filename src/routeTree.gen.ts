/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authLayoutImport } from './routes/(auth)/_layout'

// Create Virtual Routes

const authImport = createFileRoute('/(auth)')()
const authLayoutIndexLazyImport = createFileRoute('/(auth)/_layout/')()
const authLayoutLoginLazyImport = createFileRoute('/(auth)/_layout/login')()

// Create/Update Routes

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authRoute,
} as any)

const authLayoutIndexLazyRoute = authLayoutIndexLazyImport
  .update({
    id: '/',
    path: '/',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/_layout/index.lazy').then((d) => d.Route))

const authLayoutLoginLazyRoute = authLayoutLoginLazyImport
  .update({
    id: '/login',
    path: '/login',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/_layout/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_layout': {
      id: '/(auth)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof authRoute
    }
    '/(auth)/_layout/login': {
      id: '/(auth)/_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLayoutLoginLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/': {
      id: '/(auth)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutIndexLazyImport
      parentRoute: typeof authLayoutImport
    }
  }
}

// Create and export the route tree

interface authLayoutRouteChildren {
  authLayoutLoginLazyRoute: typeof authLayoutLoginLazyRoute
  authLayoutIndexLazyRoute: typeof authLayoutIndexLazyRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLayoutLoginLazyRoute: authLayoutLoginLazyRoute,
  authLayoutIndexLazyRoute: authLayoutIndexLazyRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface authRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authLayoutIndexLazyRoute
  '/login': typeof authLayoutLoginLazyRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLayoutLoginLazyRoute
  '/': typeof authLayoutIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_layout': typeof authLayoutRouteWithChildren
  '/(auth)/_layout/login': typeof authLayoutLoginLazyRoute
  '/(auth)/_layout/': typeof authLayoutIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/'
  id:
    | '__root__'
    | '/(auth)'
    | '/(auth)/_layout'
    | '/(auth)/_layout/login'
    | '/(auth)/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRoute: typeof authRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  authRoute: authRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_layout"
      ]
    },
    "/(auth)/_layout": {
      "filePath": "(auth)/_layout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_layout/login",
        "/(auth)/_layout/"
      ]
    },
    "/(auth)/_layout/login": {
      "filePath": "(auth)/_layout/login.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(auth)/_layout/": {
      "filePath": "(auth)/_layout/index.lazy.tsx",
      "parent": "/(auth)/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
