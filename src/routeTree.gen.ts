/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppLayoutImport } from './routes/app/_layout'
import { Route as authLayoutImport } from './routes/(auth)/_layout'

// Create Virtual Routes

const AppImport = createFileRoute('/app')()
const authImport = createFileRoute('/(auth)')()
const authLayoutIndexLazyImport = createFileRoute('/(auth)/_layout/')()
const authLayoutLoginLazyImport = createFileRoute('/(auth)/_layout/login')()
const authLayoutShopMerchantIdLazyImport = createFileRoute(
  '/(auth)/_layout/shop/$merchantId',
)()
const authLayoutProductProductIdLazyImport = createFileRoute(
  '/(auth)/_layout/product/$productId',
)()
const authLayoutOrderOrderIdLazyImport = createFileRoute(
  '/(auth)/_layout/order/$orderId',
)()
const AppLayoutMerchantMerchantIdIndexLazyImport = createFileRoute(
  '/app/_layout/merchant/$merchantId/',
)()
const AppLayoutMerchantMerchantIdOrdersLazyImport = createFileRoute(
  '/app/_layout/merchant/$merchantId/orders',
)()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AppRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authRoute,
} as any)

const authLayoutIndexLazyRoute = authLayoutIndexLazyImport
  .update({
    id: '/',
    path: '/',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/_layout/index.lazy').then((d) => d.Route))

const authLayoutLoginLazyRoute = authLayoutLoginLazyImport
  .update({
    id: '/login',
    path: '/login',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/_layout/login.lazy').then((d) => d.Route))

const authLayoutShopMerchantIdLazyRoute = authLayoutShopMerchantIdLazyImport
  .update({
    id: '/shop/$merchantId',
    path: '/shop/$merchantId',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/_layout/shop/$merchantId.lazy').then(
      (d) => d.Route,
    ),
  )

const authLayoutProductProductIdLazyRoute = authLayoutProductProductIdLazyImport
  .update({
    id: '/product/$productId',
    path: '/product/$productId',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/_layout/product/$productId.lazy').then(
      (d) => d.Route,
    ),
  )

const authLayoutOrderOrderIdLazyRoute = authLayoutOrderOrderIdLazyImport
  .update({
    id: '/order/$orderId',
    path: '/order/$orderId',
    getParentRoute: () => authLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/_layout/order/$orderId.lazy').then((d) => d.Route),
  )

const AppLayoutMerchantMerchantIdIndexLazyRoute =
  AppLayoutMerchantMerchantIdIndexLazyImport.update({
    id: '/merchant/$merchantId/',
    path: '/merchant/$merchantId/',
    getParentRoute: () => AppLayoutRoute,
  } as any).lazy(() =>
    import('./routes/app/_layout/merchant/$merchantId/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AppLayoutMerchantMerchantIdOrdersLazyRoute =
  AppLayoutMerchantMerchantIdOrdersLazyImport.update({
    id: '/merchant/$merchantId/orders',
    path: '/merchant/$merchantId/orders',
    getParentRoute: () => AppLayoutRoute,
  } as any).lazy(() =>
    import('./routes/app/_layout/merchant/$merchantId/orders.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_layout': {
      id: '/(auth)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof authRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_layout': {
      id: '/app/_layout'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof AppRoute
    }
    '/(auth)/_layout/login': {
      id: '/(auth)/_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLayoutLoginLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/': {
      id: '/(auth)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutIndexLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/order/$orderId': {
      id: '/(auth)/_layout/order/$orderId'
      path: '/order/$orderId'
      fullPath: '/order/$orderId'
      preLoaderRoute: typeof authLayoutOrderOrderIdLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/product/$productId': {
      id: '/(auth)/_layout/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof authLayoutProductProductIdLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/shop/$merchantId': {
      id: '/(auth)/_layout/shop/$merchantId'
      path: '/shop/$merchantId'
      fullPath: '/shop/$merchantId'
      preLoaderRoute: typeof authLayoutShopMerchantIdLazyImport
      parentRoute: typeof authLayoutImport
    }
    '/app/_layout/merchant/$merchantId/orders': {
      id: '/app/_layout/merchant/$merchantId/orders'
      path: '/merchant/$merchantId/orders'
      fullPath: '/app/merchant/$merchantId/orders'
      preLoaderRoute: typeof AppLayoutMerchantMerchantIdOrdersLazyImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/_layout/merchant/$merchantId/': {
      id: '/app/_layout/merchant/$merchantId/'
      path: '/merchant/$merchantId'
      fullPath: '/app/merchant/$merchantId'
      preLoaderRoute: typeof AppLayoutMerchantMerchantIdIndexLazyImport
      parentRoute: typeof AppLayoutImport
    }
  }
}

// Create and export the route tree

interface authLayoutRouteChildren {
  authLayoutLoginLazyRoute: typeof authLayoutLoginLazyRoute
  authLayoutIndexLazyRoute: typeof authLayoutIndexLazyRoute
  authLayoutOrderOrderIdLazyRoute: typeof authLayoutOrderOrderIdLazyRoute
  authLayoutProductProductIdLazyRoute: typeof authLayoutProductProductIdLazyRoute
  authLayoutShopMerchantIdLazyRoute: typeof authLayoutShopMerchantIdLazyRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLayoutLoginLazyRoute: authLayoutLoginLazyRoute,
  authLayoutIndexLazyRoute: authLayoutIndexLazyRoute,
  authLayoutOrderOrderIdLazyRoute: authLayoutOrderOrderIdLazyRoute,
  authLayoutProductProductIdLazyRoute: authLayoutProductProductIdLazyRoute,
  authLayoutShopMerchantIdLazyRoute: authLayoutShopMerchantIdLazyRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface authRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface AppLayoutRouteChildren {
  AppLayoutMerchantMerchantIdOrdersLazyRoute: typeof AppLayoutMerchantMerchantIdOrdersLazyRoute
  AppLayoutMerchantMerchantIdIndexLazyRoute: typeof AppLayoutMerchantMerchantIdIndexLazyRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutMerchantMerchantIdOrdersLazyRoute:
    AppLayoutMerchantMerchantIdOrdersLazyRoute,
  AppLayoutMerchantMerchantIdIndexLazyRoute:
    AppLayoutMerchantMerchantIdIndexLazyRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AppRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authLayoutIndexLazyRoute
  '/app': typeof AppLayoutRouteWithChildren
  '/login': typeof authLayoutLoginLazyRoute
  '/order/$orderId': typeof authLayoutOrderOrderIdLazyRoute
  '/product/$productId': typeof authLayoutProductProductIdLazyRoute
  '/shop/$merchantId': typeof authLayoutShopMerchantIdLazyRoute
  '/app/merchant/$merchantId/orders': typeof AppLayoutMerchantMerchantIdOrdersLazyRoute
  '/app/merchant/$merchantId': typeof AppLayoutMerchantMerchantIdIndexLazyRoute
}

export interface FileRoutesByTo {
  '/app': typeof AppLayoutRouteWithChildren
  '/login': typeof authLayoutLoginLazyRoute
  '/': typeof authLayoutIndexLazyRoute
  '/order/$orderId': typeof authLayoutOrderOrderIdLazyRoute
  '/product/$productId': typeof authLayoutProductProductIdLazyRoute
  '/shop/$merchantId': typeof authLayoutShopMerchantIdLazyRoute
  '/app/merchant/$merchantId/orders': typeof AppLayoutMerchantMerchantIdOrdersLazyRoute
  '/app/merchant/$merchantId': typeof AppLayoutMerchantMerchantIdIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_layout': typeof authLayoutRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/app/_layout': typeof AppLayoutRouteWithChildren
  '/(auth)/_layout/login': typeof authLayoutLoginLazyRoute
  '/(auth)/_layout/': typeof authLayoutIndexLazyRoute
  '/(auth)/_layout/order/$orderId': typeof authLayoutOrderOrderIdLazyRoute
  '/(auth)/_layout/product/$productId': typeof authLayoutProductProductIdLazyRoute
  '/(auth)/_layout/shop/$merchantId': typeof authLayoutShopMerchantIdLazyRoute
  '/app/_layout/merchant/$merchantId/orders': typeof AppLayoutMerchantMerchantIdOrdersLazyRoute
  '/app/_layout/merchant/$merchantId/': typeof AppLayoutMerchantMerchantIdIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/login'
    | '/order/$orderId'
    | '/product/$productId'
    | '/shop/$merchantId'
    | '/app/merchant/$merchantId/orders'
    | '/app/merchant/$merchantId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/app'
    | '/login'
    | '/'
    | '/order/$orderId'
    | '/product/$productId'
    | '/shop/$merchantId'
    | '/app/merchant/$merchantId/orders'
    | '/app/merchant/$merchantId'
  id:
    | '__root__'
    | '/(auth)'
    | '/(auth)/_layout'
    | '/app'
    | '/app/_layout'
    | '/(auth)/_layout/login'
    | '/(auth)/_layout/'
    | '/(auth)/_layout/order/$orderId'
    | '/(auth)/_layout/product/$productId'
    | '/(auth)/_layout/shop/$merchantId'
    | '/app/_layout/merchant/$merchantId/orders'
    | '/app/_layout/merchant/$merchantId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRoute: typeof authRouteWithChildren
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  authRoute: authRouteWithChildren,
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/app"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_layout"
      ]
    },
    "/(auth)/_layout": {
      "filePath": "(auth)/_layout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_layout/login",
        "/(auth)/_layout/",
        "/(auth)/_layout/order/$orderId",
        "/(auth)/_layout/product/$productId",
        "/(auth)/_layout/shop/$merchantId"
      ]
    },
    "/app": {
      "filePath": "app",
      "children": [
        "/app/_layout"
      ]
    },
    "/app/_layout": {
      "filePath": "app/_layout.tsx",
      "parent": "/app",
      "children": [
        "/app/_layout/merchant/$merchantId/orders",
        "/app/_layout/merchant/$merchantId/"
      ]
    },
    "/(auth)/_layout/login": {
      "filePath": "(auth)/_layout/login.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(auth)/_layout/": {
      "filePath": "(auth)/_layout/index.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(auth)/_layout/order/$orderId": {
      "filePath": "(auth)/_layout/order/$orderId.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(auth)/_layout/product/$productId": {
      "filePath": "(auth)/_layout/product/$productId.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(auth)/_layout/shop/$merchantId": {
      "filePath": "(auth)/_layout/shop/$merchantId.lazy.tsx",
      "parent": "/(auth)/_layout"
    },
    "/app/_layout/merchant/$merchantId/orders": {
      "filePath": "app/_layout/merchant/$merchantId/orders.lazy.tsx",
      "parent": "/app/_layout"
    },
    "/app/_layout/merchant/$merchantId/": {
      "filePath": "app/_layout/merchant/$merchantId/index.lazy.tsx",
      "parent": "/app/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
